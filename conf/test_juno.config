/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/phoenix -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

includeConfig 'juno_resources.config'

nextflow.enable.moduleBinaries = true

process {
    beforeScript = "module load singularity/3.7.1; unset R_LIBS; catch_term () { echo 'caught USR2/TERM signal'; set +e; false; on_exit ; } ; trap catch_term USR2 TERM"
    maxRetries = 3

    singularity.cacheDir = '/juno/work/ci/dev/dev_phoenix/singularity_cachedir'

//  executor = "lsf"
//  clusterOptions = "-sla CMOVOYAGER"
//  queueSize = 500
//  perJobMemLimit = true
}

params {
    config_profile_name        = 'Juno profile'
    config_profile_description = 'Minimal Juno profile'

    // Limit resources so that this can run on GitHub Actions

    // max_cpus   = 2
    // max_memory = '6.GB'
    // max_time   = '6.h'

    // Genome references
    genome = 'GRCh37'

    // Ignore MultiQC

    multiqc_config = null
    multiqc_logo = null
    multiqc_methods_description = null

    //Ignore igenomes
    igenomes_ignore = true

    // Reference genome options
    // genome = null
    fasta = "${genome_resources.genomes[ params.genome ][ 'fasta' ]}"
    fasta_index_dict = "${fasta.replaceAll('fasta$','dict')}"
    fasta_index = ["${fasta}.fai","${fasta}.amb","${fasta}.ann","${fasta}.bwt","${fasta}.pac","${fasta}.sa","${fasta_index_dict}"]
    exac_filter = "${genome_resources.resources.exac_filter}"
    exac_filter_index = "${exac_filter}.tbi"
    delly_type =  ['DUP', 'DEL', 'INV', 'INS', 'BND']
    delly_exclude = "${genome_resources.genomes[params.genome]['delly']}"
}
